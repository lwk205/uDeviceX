if test `u.host` = panda
then
    PACH=/scratch/lisergey/geoms/pachinko
else
    PACH=/scratch/snx3000/lisergey/pachinko    
fi

g_big  () {
    sdf=$PACH/big/sdf.dat
    xs=64 ys=52 zs=56
    geom
}

g_oneA () { # sizes from the file
    sdf=$PACH/post/sdf.dat
    xs=32 ys=56 zs=60
    geom
}

g_oneB () { # sizes from big sdf
    sdf=$PACH/post/sdf.dat
    xs=64 ys=52 zs=56
    geom
}

g_cyl () { #
    xs=24 ys=24 zs=12
    tsdf_cyl
    geom
}

g_cyl3 () { #
    xs=72 ys=28 zs=12
    tsdf_cyl3
    geom
}

g_narrow () { # cylinder + narrow walls
    xs=24 ys=24 zs=16
    tsdf_narrow
    geom
}

g_box () { #
    xs=64 ys=52 zs=56
    tsdf_box
    geom
}

geom () { lx=`ae $nx*$xs` ly=`ae $ny*$ys` lz=`ae $nz*$zs`; }
bop0 () { Bop="part_dumps=false force_dumps=false" ; }
bop1 () { Bop="part_dumps=true  force_dumps=true"  ; }
rbc0 () { Rbc="rbcs=false";                        }
rbc1 () {
    local a v
    cp ../src/data/cells/rbc/sc/$nv.off  rbc.off
    a=`off.area rbc.off` v=`off.volume rbc.off`
    Rbc="RBCnv=$nv rbcs RBCtotArea=$a RBCtotVolume=$v RBCphi=0 color_freq=10000"
    plcmt $radius $sc
}

small  () { nx=7   ny=2 nz=1; g_big;    part; bop0; }
normal () { nx=14  ny=4 nz=1; g_big;    part; bop0; }
big    () { nx=28  ny=8 nz=1; g_big;    part; bop0; }
oneA   () { nx=1   ny=1 nz=1; g_oneA;   full; bop1; }
oneB   () { nx=1   ny=1 nz=1; g_oneB;   full; bop1; }
cyl    () { nx=1   ny=1 nz=1; g_cyl;    full; bop1; }
cyl3   () { nx=1   ny=1 nz=1; g_cyl3;   full; bop1; }
narrow () { nx=1   ny=1 nz=1; g_narrow; full; bop1; }
box    () { nx=1   ny=1 nz=1; g_box;    full; bop1; }

msg ()    { echo >&2 ": $@"; }

strt0 () {
    Restart=
}
strt1 () {
    local h
    h=`u.host`
    Restart="RESTART=true strt_freq=100000"
    if test $h = acer; then return; fi
    mkdir -p h5                         # TODO

    if test -d strt; then rm -r strt; fi
    if test `u.host` = daint
    then cp -r /scratch/snx3000/lisergey/s0 strt
    else cp -r /scratch/lisergey/s0         strt
    fi
}

ae () { awk 'BEGIN {print '"$@"'}'; }

## fill with RBCs
part () { rx=$lx          ry=`ae $ly/3`   rz=$lz; }
full () { rx=$lx          ry=$ly          rz=$lz; }

plcmt () { # uses rx, ry, rz: [r]bc region
    local r fr sc ang
    r="$1"; shift
    fr=0
    sc="$1"; shift
    ang=0.785
    plcmt.ro $rx $ry $rz     $r $fr $sc $ang /dev/null rbcs-ic.txt
}

force0 () { # uses $vx $vy
    local a b c
    a="VCON=true VCON_SAMPLE_FREQ=100 VCON_LOG_FREQ=500 VCON_ADJUST_FREQ=1000"
    b="VCON_VX=$vx VCON_VY=$vy"
    c="FORCE_CONSTANT FORCE_PAR_A=0"
    Force="$a $b $c"
}
force () { # uses $v and $shift
    if test $shift = inf
    then vx=$v; vy=0
    else
	local p
	p=`ae "atan2(-1,$shift)"`
	vx=`ae "$v*cos($p)"`
	vy=`ae "$v*sin($p)"`
    fi
    msg "vcon: [$vx $vy]"
    force0
}

com0 () { Com=; }
com1 () {
    Com="rbc_com_freq=$freq rbc_ids=true rbc_com_dumps=true"
}

sfree0() { Sfree=; }
sfree1() {
    Sfree="RBC_STRESS_FREE"
    cp ../src/data/cells/rbc/sc/$nv.off  rbc.stress.free
}

run () {
    Run="u.batch     $nx $ny $nz ./udx 10:00:00"
}
