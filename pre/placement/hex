#!/bin/bash

"${AWK-awk}" '
function usg() {
    msg("usage: plcmt.hex <Lx> <Ly> <Lx> <r>")
    msg("  prints coordiantes of hexagonal closed packing of spheres")
    exit
}

function abs(x)  { return x<0?x*-1:x}
function asin(x) { return atan2(x, sqrt(abs(1-x*x))) }
function indomain(x, y, z) {
    if (x+r>Lx) return 0
    if (x-r<0 ) return 0

    if (y+r>Ly) return 0
    if (y-r<0 ) return 0

    if (z+r>Lz) return 0
    if (z-r<0 ) return 0
    return 1
}

BEGIN {
    if (ARGV[1] == "-h") usg();
    Lx = ARGV[1]; shift()
    Ly = ARGV[1]; shift()
    Lz = ARGV[1]; shift()
    r  = ARGV[1]; shift()
    if (ARGC == 0) { msg("plcmt.hex: arguments error"); usg() } 

    nmax = 100  # should be a big number, TODO:
    for (i=0; i<nmax; i++) for (j=0; j<nmax; j++) for (k=0; k<nmax; k++) {
       # https://en.wikipedia.org/wiki/Close-packing_of_equal_spheres#Simple_hcp_lattice
       x = 2*i + ((j+k) % 2)
       y = sqrt(3) * (j + 1/3*(k % 2))
       z = 2*sqrt(6)/3*k
       x*=r; y*=r; z*=r
       if (indomain(x, y, z)) {
	   print x, y, z
	   ngen++
       }
    }
    msg(sprintf("hex: generated: %d cells", ngen))
}
function msg(s) { printf "%s\n", s | "cat >&2" }
function shift() {
    if (ARGC == 0) {
	msg("plcmt.hex: not enougth arguments")
	exit(1)
    } else shift0()
}
function shift0(  i) { for (i = 2; i < ARGC; i++) ARGV[i-1] = ARGV[i]; ARGC-- }
' "$@"

# TEST: plcmt.hex.t0
#  plcmt.hex 42 52 20 2 > p.out.txt
#
