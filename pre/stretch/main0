A="$1"; shift
N="$1"; shift
off="$1"; shift

"${AWK=awk}" -v A="$A" -v N="$N" -v off="$off" '
function arg() {
    if (N !~ /%$/) return
    sub(/%$/, "", N)
    Percent = 1
}
function nxt() {
    if (EOF) return
    rc = getline l < off
    if (rc <= 0) EOF = 1
    else split(l, a)
}
function read(   i) {
    nxt()
    if (l != "OFF") err("not an off file: " off)
    nxt()
    nv = a[1]
    if (nv <= 0)     err("wrong nv: " nv)

    for (i = 0; i < nv; i++) {
	nxt()
	xx[i] = a[X]; yy[i] = a[Y]; zz[i] = a[Z];
    }
}
function num(x) { return x + 0 }
function write0(i,    fy, fz) {
    fx = num(ff[i])
    fy = fz = 0
    print fx, fy, fz
}
function write(   i) {
    for (i = 0; i < nv; i++) write0(i)
}
function upd() {
    if (Percent)
	N = int(N*nv/100)
    A /= N
}

function less(i, j) {
    if (Comp == "Max") return xx[i] > xx[j]
    else               return xx[i] < xx[j]
}
function add0(i,   k) {
    for (k in M) {
	if (less(i, k)) {
	    delete M[k]; M[i]; break
	}
    }
}
function add(i,   k) {
    if (m < N) { M[i]; m++}
    else add0(i)
}

function select0() {
    split("", M); m = 0
    for (i = 0; i < nv; i++) add(i)
}
function select(   i, k) {
    Comp = "Min"; select0()
    for (k in M) ff[k] = -A
    Comp = "Max"; select0()
    for (k in M) ff[k] = A
}

BEGIN {
    X = 1; Y = 2; Z = 3
    arg()
    read()
    upd()
    select()
    write()
}
function err(s) { print s | "cat >&2"; exit(2) }
'
