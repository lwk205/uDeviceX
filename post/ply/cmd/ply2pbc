usg () {
    msg 'u.ply2pbc X Y Z    [output dir] [input dir]'
    msg 'u.ply2pbc X Y Z -r [output dir] [input dir]'
    msg 'unwraps periodic images. X, Y, Z: domain sizes'
    msg ' with -r [output dir] is relative to [input dir]'
    msg 'Example: u.ply2pbc 144 24 24 -r ../unwrp r '
    exit
}

err () {
    msg "$@"
    exit 2
}

e () {
    msg "cmd: $*"
    eval "$@"
}
msg () { echo >&2 "$@"; }

find0 () {
    find "$1" -maxdepth 1 -name '*.ply'
}

rel () {
    if test "$Rel" -eq 1
    then o="$i"/"$o"
    fi
}

is_num () {
    echo "$1" | awk '{if ($0 == $0 + 0) exit(0); else exit(1); }'
}

req_num () {
    if ! is_num "$1"; then err 'u.ply2pbc: not a number '"$1"; fi
}

req_arg () {
    if test "$1" -eq 0; then err 'u.ply2pbc: need more arguments'; fi
}

if test $# -ne 0 -a "$1" = -h; then usg; fi

Rel=0
for c
do shift
   if test "$c" = -r
   then Rel=1
   else set -- "$@" "$c"
   fi
done

req_arg $#; X="$1"; shift; req_num "$X"
req_arg $#; Y="$1"; shift; req_num "$Y"
req_arg $#; Z="$1"; shift; req_num "$Z"
req_arg $#; o="$1"; shift
req_arg $#; i="$1"; shift

if test ! -d "$i"
then err 'not a directory: '"$i"
fi
rel # update o?

e mkdir '2>/dev/null'  -p "$o"
if test ! -d "$o"
then err 'u.ply2pbc: fail to create directory '"$o"
fi

find0 "$i" | sort | u.ply2pbc0 $X $Y $Z "$o"
