#!/bin/sh

prog=u.ply2box

usg () {
    msg "$prog" 'out_dir nv xl xh   yl yh   zl zh in_dir'
    msg 'nv: number of vertices in one cell'
    msg '[xl:xh][yl:yh][zl:zh]: box'
    msg 'out_dir/in_dir: input output directories'
    exit
}
e ()   { msg "cmd: $*"; eval "$@"; }
msg () { echo >&2 "$@"; }
err () { msg "$prog: $@"; exit 2; }

if test $# -ge 0 && test "$1" = -h; then usg; fi

assert () {
    local c
    c="$1"; shift
    if test "$c" -eq 0
    then err "$@"
    fi
}

numberp () { # number?
    awk -v n="$1" 'BEGIN  {r = !(n + 0 == n); exit r }'
}

intp () { # integer?
    awk -v n="$1" 'BEGIN  {r = !(int(n) == n); exit r }'
}

assert $# 'expecting out_dir' ; o="$1"; shift
assert $# 'expecting nv'      ; nv="$1"; shift
assert $# 'expecting xl'      ; xl="$1"; shift
assert $# 'expecting xh'      ; xh="$1"; shift
assert $# 'eypecting yl'      ; yl="$1"; shift
assert $# 'eypecting yh'      ; yh="$1"; shift
assert $# 'ezpecting zl'      ; zl="$1"; shift
assert $# 'ezpecting zh'      ; zh="$1"; shift
assert $# 'ezpecting in_dir'  ;  i="$1"; shift

if test ! -d "$i"; then err "not a directory: '$i'"; fi

if ! intp    "$nv"; then err "not an integer: '$nv'"; fi

if ! numberp "$xl"; then err "not a number: '$xl'"; fi
if ! numberp "$xh"; then err "not a number: '$xh'"; fi
if ! numberp "$yl"; then err "not a number: '$yl'"; fi
if ! numberp "$yh"; then err "not a number: '$yh'"; fi
if ! numberp "$zl"; then err "not a number: '$zl'"; fi
if ! numberp "$zh"; then err "not a number: '$zh'"; fi
