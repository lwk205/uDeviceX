#!/bin/sh

set -u

prog=u.ply2box
prog0=u.ply2box0
: ${FMT=%04d}
: ${DBG=0}

usg () {
    msg "$prog" 'out_dir nv xl xh   yl yh   zl zh [FILES]..'
    msg 'nv: number of vertices in one cell'
    msg '[xl:xh][yl:yh][zl:zh]: box'
    msg '[FILES]..: ply files'
    msg 'out_dir: output directories, create files out_dir/0000.vtk out_dir/0001.vtk ...'
    msg 'env. variable FMT: default value %04d'
    exit
}
e ()   {
    if test ! "$DBG" = 0; then msg "cmd: $*"; fi
    eval "$@"
}
msg () { echo >&2 "$@"; }
err () { msg "$prog: $@"; exit 2; }

if test $# -ge 0 && test "$1" = -h; then usg; fi

assert () {
    local c
    c="$1"; shift
    if test "$c" -eq 0
    then err "$@"
    fi
}

lessp () {
    awk -v a="$1" -v b="$2" \
	'BEGIN  {r = !(a < b); exit r }'
}

assert_less () {
    local a b
    a="$1"; shift
    b="$1"; shift
    if ! lessp "$a" "$b"
    then err "$@"
    fi
}

numberp () { # number?
    awk -v n="$1" 'BEGIN  {r = !(n + 0 == n); exit r }'
}

inc () {
    awk -v n="$1" 'BEGIN { print n + 1}'
}

intp () { # integer?
    awk -v n="$1" 'BEGIN  {r = !(int(n) == n); exit r }'
}

assert $# 'expect out_dir' ; o="$1"; shift
assert $# 'expect nv'      ; nv="$1"; shift
assert $# 'expect xl'      ; xl="$1"; shift
assert $# 'expect xh'      ; xh="$1"; shift
assert $# 'expect yl'      ; yl="$1"; shift
assert $# 'expect yh'      ; yh="$1"; shift
assert $# 'expect zl'      ; zl="$1"; shift
assert $# 'expect zh'      ; zh="$1"; shift
assert $# 'expect [FILE]..'

assert_less "$xl" "$xh" "fails xl=$xl < xh=$xh"
assert_less "$yl" "$yh" "fails yl=$yl < yh=$yh"
assert_less "$zl" "$zh" "fails zl=$zl < zh=$zh"

if ! intp    "$nv"; then err "not an integer: '$nv'"; fi

if ! numberp "$xl"; then err "not a number: '$xl'"; fi
if ! numberp "$xh"; then err "not a number: '$xh'"; fi
if ! numberp "$yl"; then err "not a number: '$yl'"; fi
if ! numberp "$yh"; then err "not a number: '$yh'"; fi
if ! numberp "$zl"; then err "not a number: '$zl'"; fi
if ! numberp "$zh"; then err "not a number: '$zh'"; fi

mkdir 2>/dev/null -p "$o"
if ! test -d "$o"; then err "fail to create directory '$o'"; fi

c=0
for i
do v=`printf "$o/${FMT}.vtk\n" "$c"`
   e nb=$nv xp1=$xl xp2=$xh yp1=$yl yp2=$yh zp1=$zl zp2=$zh $prog0 "$i" "$v"     '2>/dev/null'
   if test $? -ne 0; then err "u.ply2box0 failed for file '$i'"; fi
   c=`inc $c`
done
