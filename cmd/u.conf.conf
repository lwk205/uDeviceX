#!/usr/bin/awk -f

BEGIN {
    ERR_ARGP = 6
    
    h = ARGV[1]; shift()
    c = ARGV[1]; shift()
    nr = count_runs() # [n]umber of runs
    if (nr == 1) conf1(); else confN()
}

function conf1() {
    a  = args(1)   # arguments for argp
    s  = "u.argp " qq(h) " " a "   >    " "conf.h"
    rc = cmd(s)
    if (rc != 0) exit ERR_ARGP
}

function confN(   i, a, rc, s) {
    for (i = 1; i <= nr; i++) {
	a  = args(i)   # arguments for argp
	conf_h = sprintf("bin.%d/conf.h", i)
	s  = "u.argp " qq(h) " " a "   >    " conf_h
	rc = cmd(s)
	if (rc != 0) exit ERR_ARGP
    }
}

function args(n,    a, cnt) {
    while (getline < c > 0) {
	comm()
	if (emptyp()) continue
	if (runp()) {
	    if (++cnt == n) break
	} else {
	    a = a " " $0
	}
    }
    close(c)
    return a
}

function count_runs(  cnt) {
    while (getline < c > 0) {
	comm() # stip comments
	if (emptyp()) continue
	if (runp())   cnt += 1
    }
    close(c)
    return cnt
}

function shift(  i) { for (i = 2; i < ARGC; i++) ARGV[i-1] = ARGV[i]; ARGC-- }    
function runp() { return $1 == "run" } # run predicate
function comm() { sub(/#.*/, "") }     # stip comments
function emptyp() { return $0 ~ /^[ \t]*$/ }
function msg(s) { printf "%s\n", s | "cat >&2" }
function cmd(s,  rc) { return system(s) }
function qq(s)    { return "'"  s  "'" } # quotes a string
