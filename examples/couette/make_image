#! /usr/bin/env python

import numpy as np
import matplotlib.pyplot as plt
import sys, re
plt.switch_backend('agg')

H=16-3.0
gdot = 0.5

nu = 20.0 * 4.65 / 10.0
nu = nu/(H**2)

f_in  = sys.argv[1]
f_out = sys.argv[2]

t = float(re.search('([\d.]+).txt', f_in).groups()[0]) - 5.0

def uth_(t, z0):
    z = 1 - z0
    u = 0
    for i in range(1, 30):
        u += np.exp(-(i*np.pi)**2 * nu * t) * np.sin(i * np.pi * z0) / i
    return z - 2./np.pi * u

def integrate(z):
    ufirst=0
    ulast=0
    u = 0;
    n = 30
    first = True
    for t_ in np.linspace(t-1.0, t, n):
        t_ = max(t_, 1e-2)
        uc = uth_(t_, z)        
        u += uc
        if first:
            first = False
            ufirst = uc
        ulast = uc
    u -= 0.5 * (ulast + ufirst)
    return u / n
    

def compute_uth(zz):
    return [integrate(z) for z in zz]


D = np.loadtxt(f_in)

z = D[1:-1,0]
u = D[1:-1,1]

U0 = -H * gdot / 2
u = u / U0
z = z + H/2
z = z / H


zth = np.linspace(0, 1, 50)
uth = compute_uth(zth)


plt.rc('text', usetex=True)
plt.rc('font', family='serif', size=18)

plt.figure()
plt.plot(u,   z,   'k+', label="DPD")
plt.plot(uth, zth, 'k-', label="theory")

plt.xlim(0,1)
plt.ylim(0,1)
plt.xlabel(r'$u/U_0$')
plt.ylabel(r'$z/H$')

plt.xticks([0, 0.5, 1])
plt.yticks([0, 0.5, 1])

plt.legend(numpoints=1, frameon=False, fontsize=12)

plt.savefig(f_out)
