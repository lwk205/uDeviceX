 # a path to src/
S = .

# system settings : see src/configure and src/sys/*
include sys/common.mk
include config.mk

all: udx

# generated by udeps (git@gitlab.ethz.ch:mavt-cse/clarity)
include Makefile.dep

NVCC     ?= nvcc
OPT      ?= -O3 -use_fast_math -g --compiler-options -Wall
# for cuda-gdb: OPT=-O0 -g --device-debug
ARCH     ?= -arch compute_35 -code sm_35

slevel   ?= -2

NVCCFLAGS += -std=c++11 -I.
LIBS      += -lcudart

OBJS = bund.o collision.o common.o dpd-forces.o dpd.o field.o glb.o io.o main.o \
	mbounce.o mesh.o m.o mrescue.o ply.o rminmax.o sminmax.o solid.o tcells.o

ifeq ($(h5),0)
NVCCFLAGS += -DNO_H5
endif

NVCCFLAGS += -DVISCOSITY_S_LEVEL=$(slevel)

# http://devblogs.nvidia.com/parallelforall/separate-compilation-linking-cuda-device-code
udx: $(OBJS)
	$(NVCC)  $(ARCH) -dlink $(OBJS) $(NVCCLIBS) -o gpuCode.o
	$(LINK)  gpuCode.o $(OBJS) $(LIBS) -o $@

# dev
%.o:          $S/%.cu;          $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT)     $< -c -o $@

# dev and hst
dpd-forces.o: $S/dpd-forces.cu; $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT) -dc $< -c -o $@
bund.o:       $S/bund.cu;       $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT) -dc $< -c -o $@
glb.o:        $S/glb.cu;        $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT) -dc $< -c -o $@
dpd.o:        $S/dpd/dpd.cu;    $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT) -dc $< -c -o $@

clean:; rm -f udx *.o

.PHONY = clean all
