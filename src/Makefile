# system settings : see src/configure and src/sys/*
include sys/common.mk
include config.mk

all: udx

# generated by .tools/deps.awk
include Makefile.dep

NVCC     ?= nvcc
OPT      ?= -O3 -use_fast_math -g --compiler-options -Wall
# for cuda-gdb: OPT=-O0 -g --device-debug
ARCH     ?= -arch compute_35 -code sm_35

slevel   ?= -2

NVCCFLAGS += -std=c++11
LDFLAGS   += -L../cuda-dpd
NVCCFLAGS += -I../cuda-dpd -I.
LIBS      += -lcuda-dpd -lcudart

OBJS = 	bund.o common.o dpd-forces.o glb.o io.o main.o sminmax.o collision.o tcells.o mrescue.o mbounce.o mesh.o m.o \
		solid.o ply.o rminmax.o field.o

ifeq ($(h5),0)
NVCCFLAGS += -DNO_H5
endif

NVCCFLAGS += -DVISCOSITY_S_LEVEL=$(slevel)

# I have some device code in OBJS. I have to link it separatly
udx:   $(OBJS) libcuda-dpd
	$(NVCC)  $(ARCH) -dlink -L../cuda-dpd $(OBJS) $(LIBS) -o gpuCode.o
	$(LINK)  $(LDFLAGS) gpuCode.o $(OBJS) $(LIBS) -o $@

# a rule for the most of *.cu files
%.o:              %.cu;          $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT)     $< -c -o $@

# some files must be compiled in diferent way (with `-dc' flag) See
# "Separate Compilation and Linking of CUDA C++ Device Code"
# http://devblogs.nvidia.com/parallelforall/separate-compilation-linking-cuda-device-code
dpd-forces.o:     dpd-forces.cu; $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT) -dc $< -c -o $@
bund.o:           bund.cu;       $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT) -dc $< -c -o $@
glb.o:            glb.cu;        $(NVCC) $(ARCH) $(NVCCFLAGS) $(OPT) -dc $< -c -o $@

libcuda-dpd:; make -C ../cuda-dpd \
	NVCC="$(NVCC)" NVCCFLAGS="$(NVCCFLAGS)" OPT="$(OPT)" ARCH="$(ARCH)"

clean:  ; rm -f udx *.o
	make -C ../cuda-dpd clean

.PHONY = clean libcuda-dpd all
