#### contact force: RBC and sphere in double Poiseuille
# nTEST: mix.contact.t1
export PATH=../tools:$PATH
(cd ../cmd; make ) > /dev/null
rm -rf diag.txt h5 bop ply
 x=5 y=17 z=8; echo 1 0 0 $x  0 1 0 $y  0 0 1 $z  0 0 0 1 > rbcs-ic.txt
x=11 y=15 z=8; echo $x $y $z                              > rigs-ic.txt
cp data/rig/sphere_R2.ply mesh_solid.ply
cp data/cells/rbc.498.off rbc.off
:
u.conf conf/double.poiseuille.h <<!!!
   rbcs tend=2.0 part_freq=1500
   solids sbounce_back wall_creation=1
   part_dumps field_freq=1500
   pushflow pushrbc doublepoiseuille
   contactforces
   run
!!!
{ make clean &&  u.make -j && make -C ../tools; } > /dev/null
sh runfile
ply2punto r/00002.ply | uscale 1 > ply.out.txt

#### no contact force: RBC and sphere in double Poiseuille
# nTEST: mix.no.contact.t1
export PATH=../tools:$PATH
(cd ../cmd; make ) > /dev/null
rm -rf diag.txt h5 bop ply
 x=5 y=17 z=8; echo 1 0 0 $x  0 1 0 $y  0 0 1 $z  0 0 0 1 > rbcs-ic.txt
x=11 y=15 z=8; echo $x $y $z                              > rigs-ic.txt
cp data/rig/sphere_R2.ply mesh_solid.ply
cp data/cells/rbc.498.off rbc.off
:
u.conf conf/double.poiseuille.h <<!!!
   rbcs tend=2.0 part_freq=1500
   solids sbounce_back wall_creation=1
   part_dumps field_freq=1500
   pushflow pushrbc doublepoiseuille
   run
!!!
{ make clean &&  u.make -j && make -C ../tools; } > /dev/null
sh runfile
ply2punto r/00002.ply | uscale 1 > ply.out.txt
