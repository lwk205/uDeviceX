### parse from opt file
# TEST: parse.t0
t=opt.cfg
u=u/parser/read
s=`pwd`
echo "a=42"   >  $t
echo "f=3.14" >> $t
:
u.conf "$s" "$u" "$s/conf/default.h" <<!
  run
!
{ u.make clean && u.make -j; } > /dev/null
u.run ./udx $t > parser.out.txt

### parse from args
# TEST: parse.t1
u=u/parser/read
s=`pwd`
:
u.conf "$s" "$u" "$s/conf/default.h" <<!
  run
!
{ u.make clean && u.make -j; } > /dev/null
u.run ./udx a=42 f=3.14 > parser.out.txt

### parse from opt and args
# TEST: parse.t2
t=opt.cfg
echo "a=42"   >  $t
echo "f=3.14" >> $t
u=u/parser/read
s=`pwd`
:
u.conf "$s" "$u" "$s/conf/default.h" <<!
  run
!
{ u.make clean && u.make -j; } > /dev/null
u.run ./udx $t a=5 > parser.out.txt

### parse from opt file with opt argument
# TEST: parse.t3
t=opt.cfg
u=u/parser/read
s=`pwd`
echo "a=42"   >  $t
echo "f=3.14" >> $t
echo "opt=6"  >> $t
:
u.conf "$s" "$u" "$s/conf/default.h" <<!
  run
!
{ u.make clean && u.make -j; } > /dev/null
u.run ./udx $t > parser.out.txt

### parse optional int and float arrays
# nTEST: parse.t4
t=opt.cfg
u=u/parser/read
s=`pwd`
echo "a=42"   >  $t
echo "f=3.14" >> $t
echo "ivec=[1, 2, 3, 4]"  >> $t
echo "fvec=[0.1, 0.2, 0.3, 0.4]"  >> $t
:
u.conf "$s" "$u" "$s/conf/default.h" <<!
  run
!
{ u.make clean && u.make -j; } > /dev/null
u.run ./udx $t > parser.out.txt
