float* R1 = &pp.r[ip];
float* V0 = &pp.v[ip];

float R0[3];
for (c = 0; c < 3; c++) R0[c] = R1[c] - dt*V0[c];

ok = intersect(R0, R1, radius, &t);
if (!ok) return;

float Rt[3];
wavg(R0, R1, t, /**/ Rt);

float Vw[3];
om2lin(om, Rt, Vw);

float V1[3];
bounce_vel(V0, Vw, /**/ V1);

float f0[3], to0[3];
bb_lin(        V0, V1, dt, /**/  f0);
bb_ang(R0, R1, V0, V1, dt, /**/ to0);

for (c = 0; c < 3; c++) {
    f[c] +=  f0[c];
   to[c] += to0[c];
}

