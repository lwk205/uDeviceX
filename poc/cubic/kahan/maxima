/* A numerically stable cubic equation solver

[1] W. Kahan, "To Solve a Real Cubic Equation"
http://people.eecs.berkeley.edu/~wkahan/Math128/Cubic.pdf

*/

disc(a, b, c):= b^2 - a*c;
sgn(x):= if x > 0 then 1 elseif x = 0 then 0 else -1;

qdrtc(A, B, C):= block(
  [b, q, r, X1, Y1, X2, Y2],
  b: -B/2, q: disc(A, b, C),
  if q < 0 then (
    X1: b/A, X2 : X1,
    Y1: sqrt(-q)/A, Y2: - Y1)
  else (
    Y1: 0, Y2: 0,
    r: b + sgn(b)*sqrt(q),
    if r = 0 then (
      X1: C/A, X2 : - X1)
    else (
      X1: C/r, X2: r/A)),
  [X1, Y1, X2, Y2]);

eeval(X, A, B, C, D):=block(
  [q0, B1, C2, dQ, Q],
  q0: A*X,
  B1: q0 + B,
  C2: B1*X + C,
  dQ: (q0 + B1)*X + C2,
  Q: C2*X + D,
  [Q, dQ, B1, C2]);

qbc(A, B, C, D):=block(
  [X, b1, c2, q, dq, b1, c2],
  if A = 0 then (
    X: inf, A: B, b1: C, c2: D)
  elseif D = 0 then (
    X: 0, b1: B, c2: C)
  else (
    X: -(B/A)/3,
    [q, dq, b1, c2]: eeval(X, A, B, C, D),
    t: q/A, r: abs(t)^(1/3), s: sgn(t),
    t: -dq/A, if t > 0 then r: 1.324718 * max(r, sqrt(t)),
    x0: X - s*r,
    if x0 # X then
    do (
      X: x0,
      [q, dq, b1, c2]: eeval(X, A, B, C, D),
      if dq = 0 then x0 : X
      else x0 : X - (q/dq)/1.000000000000001,
      if s * x0 <= s * X then return('done)),
    if abs(A)*X*X > abs(D/X) then (
      c2 : -D/X, b1 : (c2 - C)/X)),
  [X1, Y1, X2, Y2] : qdrtc(A, b1, c2),
  [X, X1, Y1, X2, Y2]);
