load("pdiff")  $
load("vect")   $
load("cgrind") $
load("scifac") $

(X: 1, Y: 2, Z: 3) $

cross(a, b):=express(a ~ b);
dot(a, b):=express(a . b);

r0: 'u^2/D^2;
f0: sqrt(1-4*'r)*('a0 + 'a1*'r + 'a2*'r^2);

x0: 'u*cos('v);
y0: 'u*sin('v);

x: x('u, 'v);
y: y('u, 'v);
z: D*f(r(u)) $

ru: diff([x, y, z], u);
rv: diff([x, y, z], v);

ruu: diff([x, y, z], u, 2);
rvv: diff([x, y, z], v, 2);
ruv: diff(diff([x, y, z], v), u);

n: cross(ru, rv);

matchdeclare([n, m], numberp) $
defrule(r_f, pderivop(f,n)(r('u)), ff(n)) $
defrule(r_r, pderivop(r,n)('u),  rr(n)) $
defrule(r_x, pderivop('x,n,m)('u,'v),  xx(n, m)) $
defrule(r_y, pderivop('y,n,m)('u,'v),  yy(n, m)) $

ff(n):=concat('f, n);
rr(i):=diff(r0, 'u, i);
xx(i, j):=diff(diff(x0, 'u, i), 'v, j);
yy(i, j):=diff(diff(y0, 'u, i), 'v, j);

ap(e):=apply1(e, r_f, r_r, r_x, r_y);

ru: ap(ru);
rv: ap(rv);
  
ruu: ap(ruu);
rvv: ap(rvv);
ruv: ap(ruv);
n: ap(n);
n: trigsimp(n);

L: dot(ruu, n);
M: dot(ruv, n);
N: trigsimp(dot(rvv, n));

for e in [
  f1=fullratsimp(diff(f0, r)), f2=gcfac(factor(diff(f0, r, 2))), 'L=L, 'M=M, 'N=N,
  '(n[X]) = n[X], '(n[Y]) = n[Y], '(n[Z]) = n[Z]
  ] do cgrind(e);
