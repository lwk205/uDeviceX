load("vect") $
load("pdiff") $
load("cgrind") $
load("util.mac") $

a: [ax, ay, az] $
b: [bx, by, bz] $
c: [cx, cy, cz] $
d: [dx, dy, dz] $

ab: b - a $
ac: c - a $
bd: d - b $
bc: c - b $
da: d - a $

[kx, ky, kz]: cross(ab, ac) $
[nx, ny, nz]: cross(bd, bc) $

[knx, kny, knz]: cross(['kx, 'ky, 'kz], ['nx, 'ny, 'nz]) $

kn : vabs(['knx, 'kny, 'knz]) $ /* TODO: sign! */
kdn: dot(['kx, 'ky, 'kz], ['nx, 'ny, 'nz]) ;
n  : vabs(['nx, 'ny, 'nz]);
k  : vabs(['kx, 'ky, 'kz]);

E: atan2('kn, 'kdn);

[E, V, T]: g(
  ['E ,  E,   sl(E)],
  ['kn,  kn,  sl(kn)],

  ['knx, knx, sl(knx)],
  ['kny, kny, sl(kny)],
  ['knz, knz, sl(knz)],

  ['kdn, kdn, sl(kdn)],

  ['n  ,   n, sl(n)],
  ['k  ,   k, sl(k)],
  
  ['nx, nx, sl(nx)],
  ['ny, ny, sl(ny)],
  ['nz, nz, sl(nz)],
  ['kx, kx, sl(kx)],
  ['ky, ky, sl(ky)],
  ['kz, kz, sl(kz)]) $

[E, V, T]: rm(
  E, V, T,
  'knx_ky, 'knx_kz, 'knx_ny, 'knx_nz,
  'kny_kx, 'kny_kz, 'kny_nx, 'kny_nz,
  'knz_ky, 'knz_kx, 'knz_ny, 'knz_nx,
  'kdn_kx, 'kdn_ky, 'kdn_kz, 'kdn_nx, 'kdn_ny, 'kdn_nz
  ) $

with_stdout("ang.c", fmt0(E, V, T));
