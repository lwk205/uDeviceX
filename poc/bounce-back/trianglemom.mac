kill(all);

transf(u, v, a, b, c) := (1-u-v) * a + u * b + v * c;
toGlobal(u,v) := transf(u, v, [xA, yA], [xB, yB], [xC, yC]);

T : toGlobal(u, v);
cross(a,b) := a[1] * b[2] - a[2] * b[1];
Jacobian : cross(diff(T, u), diff(T, v));


x(u, v) := transf(u, v, xA, xB, xC) - transf(u0, v0, xA, xB, xC);
y(u, v) := transf(u, v, yA, yB, yC) - transf(u0, v0, yA, yB, yC);

Ixx : Jacobian * integrate(integrate(x(u,v) * x(u,v), v, 0, 1-u), u, 0, 1);
Ixx : Jacobian * integrate(integrate(x(u,v) * y(u,v), v, 0, 1-u), u, 0, 1);
Ixx : Jacobian * integrate(integrate(y(u,v) * y(u,v), v, 0, 1-u), u, 0, 1);