/* G: domain size
   N: number of cells in sdf files
   lo: low edge of a subdomain
   L:  subdomain size
   T: number of cells in texture
   M: texture margin
*/

load("scifac") $
load("format") $
load("u.mac") $
fmt0(e, r):=format(fullratsimp(e), %poly(r), %factor) $
fmt(f):=fmt0(f('r), 'r)                               $

[sdf2g, g2sdf]: genfi(-1/2,      0,   N-1/2,          G) $
[tex2g, g2tex]: genfi(-1/2, lo - M,   T-1/2, lo + L + M) $
[sub2g, g2sub]: genfi(-L/2, lo,       0, lo + L/2)    $

tex2sdf: chain(tex2g, g2sdf) $
sdf2tex: chain(sdf2g, g2tex) $
sub2tex: chain(sub2g, g2tex) $
sub2sdf: chain(sub2g, g2sdf) $

u: map('gcfac, fmt(tex2sdf));
gcfac(fmt(sub2tex));

fmt(sub2sdf);

/* from `sdf/dev.h` */
e: T * (r + L / 2 + M) / (L + 2 * M) - 1/2;
fmt0(e, 'r);

/* from field/imp/sample.h and sdf/imp/gen.h */
s: N * (L + 2 * M) / G / T;
o: N * (lo - M) / G;
e: o + ('r + 1/2) * s - 1/2;
e: fmt0(e, 'r);

[f2g, g2f]: genfi(-1/2,      f_lo,   f_n-1/2,          f_hi) ;
[t2g, g2t]: genfi(-1/2,      t_lo,   t_n-1/2,          t_hi) ;
f2t       : chain(f2g, g2t);
map('gcfac, fmt(f2t));

(f_lo: 100, f_hi: 200, f_n: 300);
(t_lo: 400, t_hi: 500, t_n: 600);
float(f2t(700));

(T: 100, N: 200, M: 300, lo: 0, L: 16, G: 16);
float(tex2sdf(400));


