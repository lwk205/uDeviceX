#!/usr/bin/awk -f

BEGIN {
    M = 60 # max column width
    D = 2  # deliminator size
}

{ A[++N] = $0 } # N is a total number of elements
END {
    while (good(++k + 1)) ;
    n = k

    dump_width()
    dump_data()
}

function dump_data(   i) {
    for (i = 1; i in A; i ++)
	print A[i]
}

function dump_width(   i) {
    print n
    for (i = 1; i <= n; i ++) {
	if (i > 1) printf " "
	printf "%s", maxwidth(i)
    }
    printf "\n"
}

function maxwidth(i,   j, m) {
    for (j = 1; !end(i, j); j++)
	m = max(m, l(i, j))
    return m
}

function ij2c(i, j) {  # to linear index
    i--; j--
    return i + n*j + 1
}

function a(i, j,   c) {
    c = ij2c(i, j)
    return A[c]
}

function l(i, j) { return length(a(i, j)) }

# over M?
function over(len, n) {
    if  (n > 1) len += (n - 1) * D
    return len > M
} 
 
function end(i, j,   c) {
    c = ij2c(i, j)
    return c > N
}

function good(_n) {
    n = _n
    return good0()
}

function good0(   i, j, len, L) {
    for (j = 1; ; j++) {
	for (i = 1; i <= n; i++) {
	    if (end(i, j)) return 1
	    len += l(i, j)
	}
	if (over(len, n)) return 0
	len = ""
    }
}

function max(a, b) { return (a > b) ? a : b }
